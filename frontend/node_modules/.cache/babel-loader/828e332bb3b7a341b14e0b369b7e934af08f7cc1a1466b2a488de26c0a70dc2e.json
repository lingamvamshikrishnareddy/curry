{"ast":null,"code":"// Order related API calls\nexport const placeOrder = async orderDetails => {\n  try {\n    const response = await api.post('/orders', orderDetails);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to place order');\n  }\n};\nexport const getOrderStatus = async orderId => {\n  try {\n    const response = await api.get(`/orders/${orderId}/status`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch order status');\n  }\n};\nexport const getOrderHistory = async userId => {\n  try {\n    const response = await api.get(`/users/${userId}/orders`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch order history');\n  }\n};\n\n// User related API calls\nexport const login = async credentials => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  } catch (error) {\n    throw new Error('Login failed');\n  }\n};\nexport const register = async userData => {\n  try {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  } catch (error) {\n    throw new Error('Registration failed');\n  }\n};\nexport const getUserProfile = async userId => {\n  try {\n    const response = await api.get(`/users/${userId}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch user profile');\n  }\n};\nexport const updateUserProfile = async (userId, userData) => {\n  try {\n    const response = await api.put(`/users/${userId}`, userData);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to update user profile');\n  }\n};\n\n// Cart related API calls (if you decide to store cart on the server)\nexport const getCart = async userId => {\n  try {\n    const response = await api.get(`/users/${userId}/cart`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch cart');\n  }\n};\nexport const updateCart = async (userId, cartItems) => {\n  try {\n    const response = await api.put(`/users/${userId}/cart`, {\n      items: cartItems\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to update cart');\n  }\n};\n\n// Review related API calls submit review\nexport const submitReview = async reviewData => {\n  try {\n    const response = await axios.post(`${API_URL}/reviews`, reviewData);\n    return response.data;\n  } catch (error) {\n    console.error('Error submitting review:', error);\n    throw error;\n  }\n};\nexport const getReviews = async menuItemId => {\n  try {\n    const response = await api.get(`/menu/${menuItemId}/reviews`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch reviews');\n  }\n};\n\n// Chat support API call\nexport const sendChatMessage = async message => {\n  try {\n    const response = await api.post('/chat', {\n      message\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to send chat message');\n  }\n};\nexport default api;","map":{"version":3,"names":["placeOrder","orderDetails","response","api","post","data","error","Error","getOrderStatus","orderId","get","getOrderHistory","userId","login","credentials","register","userData","getUserProfile","updateUserProfile","put","getCart","updateCart","cartItems","items","submitReview","reviewData","axios","API_URL","console","getReviews","menuItemId","sendChatMessage","message"],"sources":["C:/Users/linga/veg app/frontend/src/services/api.js"],"sourcesContent":["\r\n\r\n// Order related API calls\r\nexport const placeOrder = async (orderDetails) => {\r\n  try {\r\n    const response = await api.post('/orders', orderDetails);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to place order');\r\n  }\r\n};\r\n\r\nexport const getOrderStatus = async (orderId) => {\r\n  try {\r\n    const response = await api.get(`/orders/${orderId}/status`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch order status');\r\n  }\r\n};\r\n\r\nexport const getOrderHistory = async (userId) => {\r\n  try {\r\n    const response = await api.get(`/users/${userId}/orders`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch order history');\r\n  }\r\n};\r\n\r\n// User related API calls\r\nexport const login = async (credentials) => {\r\n  try {\r\n    const response = await api.post('/auth/login', credentials);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Login failed');\r\n  }\r\n};\r\n\r\nexport const register = async (userData) => {\r\n  try {\r\n    const response = await api.post('/auth/register', userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Registration failed');\r\n  }\r\n};\r\n\r\nexport const getUserProfile = async (userId) => {\r\n  try {\r\n    const response = await api.get(`/users/${userId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch user profile');\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = async (userId, userData) => {\r\n  try {\r\n    const response = await api.put(`/users/${userId}`, userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to update user profile');\r\n  }\r\n};\r\n\r\n// Cart related API calls (if you decide to store cart on the server)\r\nexport const getCart = async (userId) => {\r\n  try {\r\n    const response = await api.get(`/users/${userId}/cart`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch cart');\r\n  }\r\n};\r\n\r\nexport const updateCart = async (userId, cartItems) => {\r\n  try {\r\n    const response = await api.put(`/users/${userId}/cart`, { items: cartItems });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to update cart');\r\n  }\r\n};\r\n\r\n// Review related API calls submit review\r\nexport const submitReview = async (reviewData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/reviews`, reviewData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error submitting review:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getReviews = async (menuItemId) => {\r\n  try {\r\n    const response = await api.get(`/menu/${menuItemId}/reviews`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch reviews');\r\n  }\r\n};\r\n\r\n// Chat support API call\r\nexport const sendChatMessage = async (message) => {\r\n  try {\r\n    const response = await api.post('/chat', { message });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to send chat message');\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}