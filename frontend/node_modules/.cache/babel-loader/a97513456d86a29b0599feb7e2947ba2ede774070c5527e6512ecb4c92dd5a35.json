{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to include the auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Menu related API calls\n\nexport const getMenuItems = async (searchTerm = '') => {\n  try {\n    const response = await axios.get(`${API_URL}/menu`, {\n      params: {\n        search: searchTerm\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching menu items:', error);\n    throw error;\n  }\n};\nexport const submitReview = async reviewData => {\n  try {\n    const response = await axios.post(`${API_URL}/reviews`, reviewData);\n    return response.data;\n  } catch (error) {\n    console.error('Error submitting review:', error);\n    throw error;\n  }\n};\n\n// Order related API calls\nexport const placeOrder = async orderDetails => {\n  try {\n    const response = await api.post('/orders', orderDetails);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to place order');\n  }\n};\nexport const getOrderStatus = async orderId => {\n  try {\n    const response = await api.get(`/orders/${orderId}/status`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch order status');\n  }\n};\nexport const getOrderHistory = async userId => {\n  try {\n    const response = await api.get(`/users/${userId}/orders`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch order history');\n  }\n};\n\n// User related API calls\nexport const login = async credentials => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  } catch (error) {\n    throw new Error('Login failed');\n  }\n};\nexport const register = async userData => {\n  try {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  } catch (error) {\n    throw new Error('Registration failed');\n  }\n};\nexport const getUserProfile = async userId => {\n  try {\n    const response = await api.get(`/users/${userId}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch user profile');\n  }\n};\nexport const updateUserProfile = async (userId, userData) => {\n  try {\n    const response = await api.put(`/users/${userId}`, userData);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to update user profile');\n  }\n};\n\n// Cart related API calls (if you decide to store cart on the server)\nexport const getCart = async userId => {\n  try {\n    const response = await api.get(`/users/${userId}/cart`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch cart');\n  }\n};\nexport const updateCart = async (userId, cartItems) => {\n  try {\n    const response = await api.put(`/users/${userId}/cart`, {\n      items: cartItems\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to update cart');\n  }\n};\n\n// Review related API calls submit review\n\nexport const getReviews = async menuItemId => {\n  try {\n    const response = await api.get(`/menu/${menuItemId}/reviews`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch reviews');\n  }\n};\n\n// Chat support API call\nexport const sendChatMessage = async message => {\n  try {\n    const response = await api.post('/chat', {\n      message\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to send chat message');\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","getMenuItems","searchTerm","response","get","params","search","data","console","submitReview","reviewData","post","placeOrder","orderDetails","Error","getOrderStatus","orderId","getOrderHistory","userId","login","credentials","register","userData","getUserProfile","updateUserProfile","put","getCart","updateCart","cartItems","items","getReviews","menuItemId","sendChatMessage","message"],"sources":["C:/Users/linga/veg app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor to include the auth token\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers['Authorization'] = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n}, (error) => {\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Menu related API calls\r\n\r\nexport const getMenuItems = async (searchTerm = '') => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/menu`, {\r\n      params: { search: searchTerm }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching menu items:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const submitReview = async (reviewData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/reviews`, reviewData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error submitting review:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Order related API calls\r\nexport const placeOrder = async (orderDetails) => {\r\n  try {\r\n    const response = await api.post('/orders', orderDetails);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to place order');\r\n  }\r\n};\r\n\r\nexport const getOrderStatus = async (orderId) => {\r\n  try {\r\n    const response = await api.get(`/orders/${orderId}/status`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch order status');\r\n  }\r\n};\r\n\r\nexport const getOrderHistory = async (userId) => {\r\n  try {\r\n    const response = await api.get(`/users/${userId}/orders`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch order history');\r\n  }\r\n};\r\n\r\n// User related API calls\r\nexport const login = async (credentials) => {\r\n  try {\r\n    const response = await api.post('/auth/login', credentials);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Login failed');\r\n  }\r\n};\r\n\r\nexport const register = async (userData) => {\r\n  try {\r\n    const response = await api.post('/auth/register', userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Registration failed');\r\n  }\r\n};\r\n\r\nexport const getUserProfile = async (userId) => {\r\n  try {\r\n    const response = await api.get(`/users/${userId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch user profile');\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = async (userId, userData) => {\r\n  try {\r\n    const response = await api.put(`/users/${userId}`, userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to update user profile');\r\n  }\r\n};\r\n\r\n// Cart related API calls (if you decide to store cart on the server)\r\nexport const getCart = async (userId) => {\r\n  try {\r\n    const response = await api.get(`/users/${userId}/cart`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch cart');\r\n  }\r\n};\r\n\r\nexport const updateCart = async (userId, cartItems) => {\r\n  try {\r\n    const response = await api.put(`/users/${userId}/cart`, { items: cartItems });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to update cart');\r\n  }\r\n};\r\n\r\n// Review related API calls submit review\r\n\r\n\r\nexport const getReviews = async (menuItemId) => {\r\n  try {\r\n    const response = await api.get(`/menu/${menuItemId}/reviews`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch reviews');\r\n  }\r\n};\r\n\r\n// Chat support API call\r\nexport const sendChatMessage = async (message) => {\r\n  try {\r\n    const response = await api.post('/chat', { message });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to send chat message');\r\n  }\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EAAGI,KAAK,IAAK;EACZ,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;;AAEF;;AAEA,OAAO,MAAMG,YAAY,GAAG,MAAAA,CAAOC,UAAU,GAAG,EAAE,KAAK;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,GAAGlB,OAAO,OAAO,EAAE;MAClDmB,MAAM,EAAE;QAAEC,MAAM,EAAEJ;MAAW;IAC/B,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACdU,OAAO,CAACV,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMW,YAAY,GAAG,MAAOC,UAAU,IAAK;EAChD,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMlB,KAAK,CAAC0B,IAAI,CAAC,GAAGzB,OAAO,UAAU,EAAEwB,UAAU,CAAC;IACnE,OAAOP,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACdU,OAAO,CAACV,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMc,UAAU,GAAG,MAAOC,YAAY,IAAK;EAChD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMhB,GAAG,CAACwB,IAAI,CAAC,SAAS,EAAEE,YAAY,CAAC;IACxD,OAAOV,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACd,MAAM,IAAIgB,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAO,IAAK;EAC/C,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,GAAG,CAAC,WAAWY,OAAO,SAAS,CAAC;IAC3D,OAAOb,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACd,MAAM,IAAIgB,KAAK,CAAC,8BAA8B,CAAC;EACjD;AACF,CAAC;AAED,OAAO,MAAMG,eAAe,GAAG,MAAOC,MAAM,IAAK;EAC/C,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,GAAG,CAAC,UAAUc,MAAM,SAAS,CAAC;IACzD,OAAOf,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACd,MAAM,IAAIgB,KAAK,CAAC,+BAA+B,CAAC;EAClD;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,KAAK,GAAG,MAAOC,WAAW,IAAK;EAC1C,IAAI;IACF,MAAMjB,QAAQ,GAAG,MAAMhB,GAAG,CAACwB,IAAI,CAAC,aAAa,EAAES,WAAW,CAAC;IAC3D,OAAOjB,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACd,MAAM,IAAIgB,KAAK,CAAC,cAAc,CAAC;EACjC;AACF,CAAC;AAED,OAAO,MAAMO,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EAC1C,IAAI;IACF,MAAMnB,QAAQ,GAAG,MAAMhB,GAAG,CAACwB,IAAI,CAAC,gBAAgB,EAAEW,QAAQ,CAAC;IAC3D,OAAOnB,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACd,MAAM,IAAIgB,KAAK,CAAC,qBAAqB,CAAC;EACxC;AACF,CAAC;AAED,OAAO,MAAMS,cAAc,GAAG,MAAOL,MAAM,IAAK;EAC9C,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,GAAG,CAAC,UAAUc,MAAM,EAAE,CAAC;IAClD,OAAOf,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACd,MAAM,IAAIgB,KAAK,CAAC,8BAA8B,CAAC;EACjD;AACF,CAAC;AAED,OAAO,MAAMU,iBAAiB,GAAG,MAAAA,CAAON,MAAM,EAAEI,QAAQ,KAAK;EAC3D,IAAI;IACF,MAAMnB,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,UAAUP,MAAM,EAAE,EAAEI,QAAQ,CAAC;IAC5D,OAAOnB,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACd,MAAM,IAAIgB,KAAK,CAAC,+BAA+B,CAAC;EAClD;AACF,CAAC;;AAED;AACA,OAAO,MAAMY,OAAO,GAAG,MAAOR,MAAM,IAAK;EACvC,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,GAAG,CAAC,UAAUc,MAAM,OAAO,CAAC;IACvD,OAAOf,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACd,MAAM,IAAIgB,KAAK,CAAC,sBAAsB,CAAC;EACzC;AACF,CAAC;AAED,OAAO,MAAMa,UAAU,GAAG,MAAAA,CAAOT,MAAM,EAAEU,SAAS,KAAK;EACrD,IAAI;IACF,MAAMzB,QAAQ,GAAG,MAAMhB,GAAG,CAACsC,GAAG,CAAC,UAAUP,MAAM,OAAO,EAAE;MAAEW,KAAK,EAAED;IAAU,CAAC,CAAC;IAC7E,OAAOzB,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACd,MAAM,IAAIgB,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC;;AAED;;AAGA,OAAO,MAAMgB,UAAU,GAAG,MAAOC,UAAU,IAAK;EAC9C,IAAI;IACF,MAAM5B,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,GAAG,CAAC,SAAS2B,UAAU,UAAU,CAAC;IAC7D,OAAO5B,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACd,MAAM,IAAIgB,KAAK,CAAC,yBAAyB,CAAC;EAC5C;AACF,CAAC;;AAED;AACA,OAAO,MAAMkB,eAAe,GAAG,MAAOC,OAAO,IAAK;EAChD,IAAI;IACF,MAAM9B,QAAQ,GAAG,MAAMhB,GAAG,CAACwB,IAAI,CAAC,OAAO,EAAE;MAAEsB;IAAQ,CAAC,CAAC;IACrD,OAAO9B,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACd,MAAM,IAAIgB,KAAK,CAAC,6BAA6B,CAAC;EAChD;AACF,CAAC;AAED,eAAe3B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}