{"ast":null,"code":"const API_BASE_URL = 'http://localhost:3001/api';\nexport const getMenuItems = async () => {\n  const response = await fetch(`${API_BASE_URL}/menu`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch menu items');\n  }\n  return response.json();\n};\nexport const placeOrder = async orderDetails => {\n  const response = await fetch(`${API_BASE_URL}/orders`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(orderDetails)\n  });\n  if (!response.ok) {\n    throw new Error('Failed to place order');\n  }\n  return response.json();\n};\nexport const getOrderStatus = async orderId => {\n  const response = await fetch(`${API_BASE_URL}/orders/${orderId}/status`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch order status');\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_BASE_URL","getMenuItems","response","fetch","ok","Error","json","placeOrder","orderDetails","method","headers","body","JSON","stringify","getOrderStatus","orderId"],"sources":["C:/Users/linga/veg app/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:3001/api';\r\n\r\nexport const getMenuItems = async () => {\r\n  const response = await fetch(`${API_BASE_URL}/menu`);\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch menu items');\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const placeOrder = async (orderDetails) => {\r\n  const response = await fetch(`${API_BASE_URL}/orders`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(orderDetails),\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error('Failed to place order');\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const getOrderStatus = async (orderId) => {\r\n  const response = await fetch(`${API_BASE_URL}/orders/${orderId}/status`);\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch order status');\r\n  }\r\n  return response.json();\r\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,OAAO,CAAC;EACpD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EAC/C;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAOC,YAAY,IAAK;EAChD,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,SAAS,EAAE;IACrDS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,YAAY;EACnC,CAAC,CAAC;EACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMQ,cAAc,GAAG,MAAOC,OAAO,IAAK;EAC/C,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,WAAWe,OAAO,SAAS,CAAC;EACxE,IAAI,CAACb,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EACjD;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}